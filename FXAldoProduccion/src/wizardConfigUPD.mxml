<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow  
	name="wizardNewConfig" title="Administrador de Configuración" 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:mx2="library://ns.adobe.com/flex/halo"
	xmlns:ns1="com.r3Take.utils.*" xmlns:local="*" 
	xmlns:ns2="com.flashdev.file.*" 
	close="closeTW(event);" 
	height="430" width="100%">
	
	<s:states>
		<s:State name="INIT"/>
		<s:State name="EMPS"/>
		<s:State name="SUCR"/>
		<s:State name="FOLS"/>	
		<s:State name="SMIT"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			private function myEasingFunction(t:Number, b:Number, c:Number, d:Number):Number 
			{
				if ((t /= d) < (1 / 2.75)) {
					return c * (7.5625 * t * t) + b;
				}
				else if (t < (2 / 2.75)) {
					return c * (7.5625 * (t-=(1.5/2.75)) * t + .75) + b;
				}
				else if (t < (2.5 / 2.75)) {
					return c * (7.5625 * (t-=(2.25/2.75)) * t + .9375) + b;
				}
				else {
					return c * (7.5625 * (t-=(2.625/2.75)) * t + .984375) + b;
				}
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="tipoPersona"/>
		
		<mx:Sequence id="glowButton" repeatCount="100">
			<mx:Glow duration="4000" alphaFrom="0.1" alphaTo="0.9" blurXFrom="0.0" blurXTo="10.0" blurYFrom="0.0" blurYTo="10.0" color="#054a95" /> 	
			<mx:Glow duration="4000" alphaFrom="0.9" alphaTo="0.1" blurXFrom="10.0" blurXTo="0.0" blurYFrom="10.0" blurYTo="0.0" color="#054a95" /> 	
		</mx:Sequence>
		
		<mx:Move id="showEffect" 
				 yFrom="-25" xTo="0" yTo="0" 
				 duration="2500" 
				 easingFunction="myEasingFunction"/>	
		
		<mx:EmailValidator
			source="{correoEmp}" property="text" requiredFieldError="El correo electrónico es un campo es obligatorio"  
			invalidCharError="El formato de correo electrónico es incorrecto."
			invalidDomainError="El formato del dominio del correo electrónico es incorrecto."
			invalidPeriodsInDomainError="El formato del dominio del correo electrónico es incorrecto."
			missingAtSignError="La cuenta de correo electrónico no contiene el cacter @" 
			tooManyAtSignsError="La cuenta de correo electrónico contiene el carácter @ más de una vez"
			valid="validNextMAILEMP.text = '1';" 
			invalid="validNextMAILEMP.text = '0'" trigger="{correoEmp}" triggerEvent="change"/>
		
		<mx:EmailValidator
			source="{correoSuc}" property="text" requiredFieldError="El correo electrónico es un campo es obligatorio" 
			invalidCharError="El formato de correo electrónico es incorrecto."
			invalidDomainError="El formato del dominio del correo electrónico es incorrecto."
			invalidPeriodsInDomainError="El formato del dominio del correo electrónico es incorrecto."
			missingAtSignError="La cuenta de correo electrónico no contiene el cacter @" 
			tooManyAtSignsError="La cuenta de correo electrónico contiene el carácter @ más de una vez"
			valid="validNextMAILSUC.text = '1';" 
			invalid="validNextMAILSUC.text = '0'" trigger="{correoSuc}" triggerEvent="change"/>
		
	</fx:Declarations>
	<fx:Script source="r3Take.as"/>
	<fx:Script source="validateIsEmpty.as"/>
	<fx:Style source="fx.css"/>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.*;
			
			[Embed(source="assets/num/1.gif")]	[Bindable]	public var icon1:Class;
			[Embed(source="assets/num/2.gif")]	[Bindable]	public var icon2:Class;
			[Embed(source="assets/num/3.gif")]	[Bindable]	public var icon3:Class;
			[Embed(source="assets/num/4.gif")]	[Bindable]	public var icon4:Class;
			[Embed(source="assets/num/5.gif")]	[Bindable]	public var icon5:Class;
			
			[Embed(source="assets/corporativo-64.png")]		[Bindable]	public var iconCorp:Class;
			[Embed(source="assets/empresa-64.png")]			[Bindable]	public var iconEmps:Class;
			[Embed(source="assets/sucursal-64.png")]		[Bindable]	public var iconSucl:Class;
			[Embed(source="assets/certificados-64.png")]	[Bindable]	public var iconCert:Class;
			[Embed(source="assets/folios-64.png")]			[Bindable]	public var iconFols:Class;
			private var validALL:int = 26148247;
			
			private function getIMG(getlogo:TextInput, uploadLogo:uploaderGen, nomSucursal:TextInput, logo:Image):void
			{
				var getExt:Array = new Array();
				if(getlogo.text.length > 0)
				{
					getExt = getlogo.text.split(".");
					uploadLogo.fileName.text = nomSucursal.text + "." + getExt[3].toString();
					logo.source = getlogo.text;
				}
			}
			
			private function msgUpload(op:int):void
			{
				if(op == 1)
				{
					if(rutaLogo.text.length > 0)
					{
						Alert.okLabel = "Aceptar";
						Alert.show("El Logotipo se adjuntó de manera correcta.", "Aviso", Alert.OK, null, null, iconOk);
					}
					else if (rutaLogo.text.length == 0)
					{
						Alert.okLabel = "Aceptar";
						Alert.show("El Logotipo no adjuntó de manera exitosa.", "Aviso", Alert.OK, null, null, iconAlert);
					}
				}
				else if(op == 2)
				{
					if(rutaLogoMIT.text.length > 0)
					{
						Alert.okLabel = "Aceptar";
						Alert.show("El Logotipo se adjuntó de manera correcta.", "Aviso", Alert.OK, null, null, iconOk);
					}
					else if (rutaLogoMIT.text.length == 0)
					{
						Alert.okLabel = "Aceptar";
						Alert.show("El Logotipo no adjuntó de manera exitosa.", "Aviso", Alert.OK, null, null, iconAlert);
					}
				}				
			}
			
			private function upComplete(op:int):void
			{
				if(op == 1)
				{
					Send(567);
				}
				else if (op == 2)
				{
					Send(738);
				}
			}
			
			private function dataCombosInsert():void 
			{	
				var valsPais:Array = new Array();
				var valsEstado:Array = new Array();
				var valsCiudad:Array = new Array();
				var valsMunicipio:Array = new Array();
				var valsColonia:Array = new Array();
				
				if (pais.dataProvider.length > 0 &&
					estado.dataProvider.length > 0 &&
					ciudad.dataProvider.length > 0 &&
					municipio.dataProvider.length > 0)
				{
					valsPais	  = pais.selectedItem.valueOf().toString().split(",");
					valsEstado    = estado.selectedItem.valueOf().toString().split(",");
					valsCiudad    = ciudad.selectedItem.valueOf().toString().split(",");
					valsMunicipio = municipio.selectedItem.valueOf().toString().split(",");
					
					txtPais.text      = valsPais[1].toString();
					txtEstado.text    = valsEstado[1].toString();
					txtCiudad.text    = valsCiudad[1].toString();
					txtMunicipio.text = valsMunicipio[1].toString();
				}
				if(colonia.selectedItem[1] != "Otra Colonia" && colonia.selectedItem[1] != "")
				{
					valsColonia   = colonia.selectedItem.valueOf().toString().split(",");
					idColonia.text   = valsColonia[0].toString();
					txtColonia.text   = valsColonia[1].toString();
				}
			}
			
			private function checkEnableCB(CB:mx.controls.ComboBox, TX:TextInput, 
										   CBM:mx.controls.ComboBox, TXM:TextInput, TXTIDC:TextInput):void
			{
				if(CB.dataProvider != null)
				{
					if (CB.dataProvider.length > 0)
					{
						CB.visible = true;
						TX.visible = false;
						
						CBM.visible = true;
						if(TXTIDC.text != "0")
						{
							lbOtraCol.visible = false;
							TXM.visible = false;
							TXM.x = 436;
						}
						else if(TXTIDC.text == "0")
						{
							lbOtraCol.visible = true;
							TXM.visible = true;
							TXM.x = 436;
						}
					} 
					else
					{   
						CB.visible = false;
						TX.visible = true;
						
						CBM.visible = false;
						TXM.visible = true;
						TXM.x = 218;
					}
				}
			}
			
			protected function handlerPais():void
			{
				if (pais.dataProvider != null)
				{
					var valsPais:Array = new Array();
					valsPais = pais.selectedItem.valueOf().toString().split(",");
					
					if(valsPais[1] == "México")
					{
						txtPais.text = pais.selectedItem.valueOf(1).toString();
						cp.enabled = true;
						cp.text = "";
						
						estado.visible = true;
						ciudad.visible = true;
						municipio.visible = true;
						colonia.visible = true;
						
						txtEstado.visible = false;
						txtCiudad.visible = false;
						txtMunicipio.visible = false;
						txtColonia.visible = false;
						txtColonia.x = 436;
					}
					else
					{
						cp.text = "00000";
						cp.enabled = false;
						
						estado.visible = false;
						ciudad.visible = false;
						municipio.visible = false;
						colonia.visible = false;
						
						txtEstado.visible = true;
						txtCiudad.visible = true;
						txtMunicipio.visible = true;
						txtColonia.visible = true;
						txtColonia.x = 218;
					}
				}
			}
			
			private function dataCombos():void 
			{	
				var valsColonia:Array = new Array();
				
				if (colonia.dataProvider.length > 0 )
				{
					valsColonia   = colonia.selectedItem.valueOf().toString().split(",");
					
					if(valsColonia[1].toString() == "Otra Colonia")
					{
						txtColonia.visible = true;
						lbOtraCol.visible = true;
						txtColonia.text   = "";
						idColonia.text   = "0";
					}
					else
					{
						txtColonia.visible = false;
						lbOtraCol.visible = false;
					}
				}
			}
			
			private function cpDir():void
			{
				if(cp.text.length == 5)
				{
					Send(159);//Carga datos de dirección si existe el CP.
				}
				else
				{
					cleanCombos();
				}
			}
			
			private function cleanCombos():void 
			{
				estado.dataProvider  = null;
				ciudad.dataProvider  = null;
				municipio.dataProvider  = null;
				colonia.dataProvider  = null;
				estado.errorString = "";
				ciudad.errorString = "";
				municipio.errorString = "";
				colonia.errorString = "";
				txtColonia.visible = false;
				txtColonia.errorString = "";
				lbOtraCol.visible = false;
				idColonia.text = "";
				//txtColonia.text   = "";
			}
			
			private function valYear():void
			{
				var date:Date = new Date();
				anioAprob.value = date.getFullYear();
			}
			
			private function setVal():void
			{		
				if(RFC.text.length == 12)//Moral
				{
					moral.selected = true;
					rfcMoral.text = RFC.text;
				}
				else if(RFC.text.length == 13)//Fisca
				{
					fisica.selected = true;
					rfcFisica.text = RFC.text;
				}
			}
			
			private function validSerie():void
			{
				if (existFolios.text > "0")
				{
					serie.errorString = "Esta Seire ya fue asignada a otra sucursal en el sistema.";
					serie.text = "";
				}
				else if (existFolios.text == "0")
				{
					serie.errorString = "";
				}
				existFolios.text = "";
			}
			
			private function evalFolios(op:int):void
			{
				if(op == 2)
				{
					if(Number(folioFin.text) <= Number(folioFinACT.text))
					{
						folioFin.errorString = "El Folio Final no puede ser menor al Folio Existente";
						folioFin.text = "";
					}
					else
					{
						folioFin.errorString = "";
					}	
				}	
			}
			
			private function asignaGUID():void
			{
				guid.text = GUID.create();
			}
			
			private function salir():void
			{
				paso.text = windowUPD.text;
				windowUPD.text = "finalizar";
				PopUpManager.removePopUp(msg);
				msg.visible = false;
				msg.isPopUp = false;
			}
			
			protected function closeTW(evt:CloseEvent):void 
			{
				if(windowUPD.text != "1")
				{
					clean();
					windowUPD.text = "";
					PopUpManager.removePopUp(evt.currentTarget as IFlexDisplayObject);
				}
			}
			
			private function clean():void
			{
				if(windowUPD.text == "1")
				{
					
					cleanTW(cnvsEMP);
					cleanTW(cnvsSUC);
					cleanTW(cnvsFOL);
					cleanTW(Ctrls);
				}
				else if(windowUPD.text == "2")
				{
					cleanTW(cnvsEMP);
					cleanTW(cnvsSUC);
					cleanTW(cnvsFOL);
					cleanTW(Ctrls);
				}
				else if(windowUPD.text == "3")
				{
					cleanTW(cnvsSUC);
					cleanTW(cnvsFOL);
					cleanTW(Ctrls);
				}
				else if(windowUPD.text == "4")
				{
					cleanTW(cnvsFOL);
					cleanTW(Ctrls);
				}
				else if(windowUPD.text == "5")
				{
					cleanTW(cnvsFOL);
					cleanTW(Ctrls);
				}
			}
			
			private function cancelTW():void
			{
				if(windowUPD.text != "1")
				{
					clean();
					windowUPD.text = "cancelar";
				}
			}
			
			private function cleanTW(content:spark.components.Group):void
			{
				var elements:int = 0;
				var className:String;
				var currentCtl:Object;   
				var ctrl:Array = new Array();
				
				elements = content.numChildren;
				
				for(var i:int=0; i < elements; i++)
				{
					currentCtl = content.getChildAt(i);
					className = content.className.toString();
					
					if(className == "TextInput")
					{
						spark.components.TextInput(currentCtl).text = "";
					}
					if(className == "TextArea")
					{
						spark.components.TextArea(currentCtl).text = "";
					}
					if(className == "DateField")
					{
						DateField(currentCtl).text = "";
					}
					if(className == "NumericStepper")
					{
						spark.components.NumericStepper(currentCtl).value = 0;
					}
					if(className == "ComboBox")
					{
						mx.controls.ComboBox(currentCtl).selectedItem = null;
					}
					if(className == "CheckBox")
					{
						spark.components.CheckBox(currentCtl).selected = false;   
					}
				}
			}
			
			private function initProcess():void
			{
				if(windowUPD.text == "2")//Muestra Pantalla para generar Empresa, Sucursal, Certificado y Folios
				{
					txTITLE.text = "Editar Empresa.";
					titleImg.source =  iconEmps;
					Send(621);//Obtiene Datos para editar Empresa
					currentState = "EMPS";
				}
				else if(windowUPD.text == "3")//Muestra Pantalla para generar Sucursal, Certificado y Folios
				{
					txTITLE.text = "Editar Dirección Fiscal.";
					titleImg.source =  iconSucl;
					Send(566);//Carga la Taza de Impuesto y Carga el CB de Paises
					Send(620);//Obtiene Datos para editar Sucursal
					currentState = "SUCR";
					
				}
				else if(windowUPD.text == "5")//Muestra Pantalla para generar Sucursal, Certificado y Folios
				{
					txTITLE.text = "Editar Folios.";
					titleImg.source =  iconFols;
					Send(619);//Obtiene Datos para editar Folios
					currentState = "FOLS";
				}
					
				else if(windowUPD.text == "6")//Muestra Pantalla para Configurar Sucursal, Certificado y Folios.
				{
					txTITLE.text = "Editar Sucursal.";
					titleImg.source =  iconSucl;
					Send(737);//Carga la Taza de Impuesto y Carga el CB de Plantillas.
					Send(743);//Obtiene Datos para editar Sucursal					
					
					currentState = "SMIT";			
				}
			}
			
			private function validData():String
			{
				var controlsValid:Array = new Array();
				
				if(currentState == "EMPS")//Valida Pantalla para generar Empresa.
				{
					if(validNextMAILEMP.text == "0")
					{
						Alert.okLabel = "Aceptar";
						Alert.show("EL Formato de Correo Electrónico es incorrecto, verifique la información e intente nuevamente.", "Aviso", Alert.OK, null, null, iconAlert);
						return "fail";
					}
					
					controlsValid.push(this.razonSocial, this.correoEmp);
				}
				else if(currentState == "SUCR")//Valida Pantalla para generar Sucursal.
				{
					if(idTasaImpuesto.dataProvider != null)
					{
						if (idTasaImpuesto.dataProvider.length > 0)
						{
							var valsImpuesto:Array = new Array();
							var getImpuesto:Array = new Array();
							valsImpuesto	  = idTasaImpuesto.selectedItem[1].toString().split("%");
							tasaImpuesto.text = valsImpuesto[0].toString();
						}
					}
					
					if(validNextMAILSUC.text == "0")
					{
						Alert.okLabel = "Aceptar";
						Alert.show("EL Formato de Correo Electrónico es incorrecto, verifique la información e intente nuevamente.", "Aviso", Alert.OK, null, null, iconAlert);
						return "fail";
					}
					
					controlsValid.push(this.nomSucursal, this.correoSuc, this.calle, this.numExt, this.cp);
					
					if(cp.text.length > 0)
					{	
						dataCombosInsert();
						
						if(estado.dataProvider.length == 0)
						{
							controlsValid.push(this.txtEstado);
						}
						if(ciudad.dataProvider.length == 0)
						{
							controlsValid.push(this.txtCiudad);
						}
						if(municipio.dataProvider.length == 0)
						{
							controlsValid.push(this.txtMunicipio);
						}
						if (colonia.dataProvider.length > 0 )
						{
							var valsColonia:Array = new Array();
							
							valsColonia   = colonia.selectedItem.valueOf().toString().split(",");
							
							if(valsColonia[1].toString() == "Otra Colonia")
							{
								controlsValid.push(this.txtColonia);
							}
						}
					}
					else
					{
						estado.errorString = "*Campo requerido";
						ciudad.errorString = "*Campo requerido";
						municipio.errorString = "*Campo requerido";
						colonia.errorString = "*Campo requerido";
					}
				}
				else if(currentState == "FOLS")//Valida Pantalla para generar Folios.
				{
					controlsValid.push(this.folioFin);
				}
				else if(currentState == "SMIT")//Valida Pantalla para generar Sucursal.
				{
					if(idTasaImpuesto.dataProvider != null)
					{
						if (idTasaImpuesto.dataProvider.length > 0)
						{
							var valsImpuestoM:Array = new Array();
							valsImpuestoM	  = idTasaImpuesto.selectedItem[1].toString().split("%");
							tasaImpuesto.text = valsImpuestoM[0].toString();
						}
					}
					
					controlsValid.push(this.idTasaImpuesto, this.idPlantilla);
				}
				
				return validar(controlsValid);
			}
			
			private function saveWindow():void
			{
				var valid:String;
				valid = validData();
				if(valid == "1")
				{
					Send(618);
				}
			}
			
			private function msgDataInsert():void
			{
				if(dataOK.text == "2")
				{
					adviceMSG.text = "";
					contentMSG.text = "La Empresa se Modificó en el sistema de manera correcta.";
					PopUpManager.addPopUp(msg, contentCTLS, true);
					PopUpManager.centerPopUp(msg);	 
					msg.visible = true;
					msg.isPopUp = true;
				}
				else if(dataOK.text == "3")
				{
					adviceMSG.text = "";
					contentMSG.text = "La Sucursal se Modificó en el sistema de manera correcta.";
					PopUpManager.addPopUp(msg, contentCTLS, true);
					PopUpManager.centerPopUp(msg);	 
					msg.visible = true;
					msg.isPopUp = true;
				}
				else if(dataOK.text == "5")
				{
					adviceMSG.text = "";
					contentMSG.text = "Las Series y Folios se Modificarón en el sistema de manera correcta.";
					PopUpManager.addPopUp(msg, contentCTLS, true);
					PopUpManager.centerPopUp(msg);	 
					msg.visible = true;
					msg.isPopUp = true;
				}
				else if(dataOK.text == "6")
				{
					adviceMSG.text = "";
					contentMSG.text = "Los datos de la Sucursal se Modificarón de manera correcta.";
					PopUpManager.addPopUp(msg, contentCTLS, true);
					PopUpManager.centerPopUp(msg);	 
					msg.visible = true;
					msg.isPopUp = true;
				}
			}
			
			private function viewCTLColonia():void
			{
				var valsColonia:Array = new Array();
				
				if (colonia.dataProvider.length > 0 )
				{
					valsColonia   = colonia.selectedItem.valueOf().toString().split(",");
					
					if(valsColonia[0].toString() == "0")
					{
						txtColonia.visible = true;
						lbOtraCol.visible = true;
						txtColonia.x = 436;
					}
					else
					{
						txtColonia.visible = false;
						lbOtraCol.visible = false;
						txtColonia.x = 436;
					}
				}
			}
						
			private function selectPlantilla():void
			{
				if(idPlantilla.selectedItem != null)
				{
					tipoPlantilla.text = idPlantilla.selectedItem[0].toString();
					plantilla.source = idPlantilla.selectedItem[3].toString(); 
				}
			}
		]]>
	</fx:Script>
	
<s:VGroup width="100%" height="100%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5">	
	<s:HGroup width="100%" paddingLeft="15" paddingBottom="10" paddingTop="15" verticalAlign="middle" gap="15">
		<mx:Image id="titleImg" width="64" height="64" source="assets/num/blank.png" x="20" y="24"/>
		<s:Label id="txTITLE" text="" x="60" y="28" color="#3D3D3D" fontSize="20" fontWeight="bold"/>
		<s:TextInput x="0" y="90" id="tasaImpuesto" width="20" visible="false" editable="false"/>		
	</s:HGroup>
	<s:HGroup width="100%" height="100%" paddingLeft="20" paddingBottom="10" paddingRight="20">
		<s:Group width="100%" height="100%">
			
			<s:Group width="100%" height="100%" id="cnvsEMP" showEffect="showEffect" visible.EMPS="true" visible="false">
				<s:Label x="0" y="70" text="* Nombre o Razón Social" fontWeight="bold"/>
				<s:Label x="285" y="70" text="* Correo Electrónico Empresa" fontWeight="bold"/>
				<s:Label x="29" y="10" text="* Tipo de persona" fontWeight="bold"/>
				<s:Label x="160" y="10" text="* RFC persona Fisica" fontWeight="bold"/>
				<s:Label x="334" y="10" text="* RFC persona Moral" fontWeight="bold"/>
				
				<s:RadioButton x="15" y="32" id="fisica" enabled="false" label="Física" groupName="tipoPersona" />
				<s:RadioButton x="82" y="32" id="moral"  enabled="false" label="Moral"  groupName="tipoPersona" />
				
				<s:TextInput id="RFC" visible="false" width="20"  valueCommit="setVal();" typographicCase="uppercase"/>
				
				<s:TextInput x="160" y="30" id="rfcFisica" enabled="false" name="RFC Persona Fisica" width="150" maxChars="13" editable="false"
							 restrict="A-Za-z0-9Ñ&amp;" typographicCase="uppercase" height="24"/>
				
				<s:TextInput x="334" y="30" id="rfcMoral" enabled="false" name="RFC Persona Moral" width="150" maxChars="12" editable="false" 
							 restrict="A-Za-z0-9Ñ&amp;" typographicCase="uppercase" height="24"/>
				
				<s:TextInput x="0" y="90" id="razonSocial" toolTip="Capture su nombre comercial o razón social." 
							 restrict="[A-Za-z0-9&amp;ñÑ-_.,áÁéÉíÍóÓúÚ ]" name="Nombre o Razón Social" height="24" width="267" maxChars="350"/>
				
				<s:TextInput x="285" y="90" id="correoEmp" name="Correo electrónico de la Empresa" height="24" width="199" maxChars="150"
							 restrict="\-\_a-no-zA-NO-Z0-9@." typographicCase="lowercase"/>
				
			</s:Group>
			
			<s:Group width="100%" height="100%" id="cnvsSUC" showEffect="showEffect" visible.SUCR="true" visible="false">
				<s:Label x="245" y="70" text="* Calle" fontWeight="bold"/>
				<s:Label x="0" y="10" text="* Nombre Sucursal" fontWeight="bold"/>
				<s:Label x="411" y="10" text="* Adjuntar Logotipo" fontWeight="bold"/>
				<s:Label x="521" y="10" text=" (Solo Formatos png y jpg)" fontWeight="bold" fontStyle="italic"/>
				<s:Label x="483.2" y="70" text="* Numero Ext" fontWeight="bold"/>
				<s:Label x="601.7" y="70" text="Numero Int"/>
				<s:Label x="0" y="70" text="* Correo Electrónico Sucursal" fontWeight="bold"/>		
				<s:Label x="148" y="130" text="* Codigo Postal" fontWeight="bold"/>
				<s:Label x="0" y="130" text="Pais"/>
				<s:Label x="283" y="130" text="Estado"/>
				<s:Label x="486.2" y="131" text="Ciudad"/>
				<s:Label x="0" y="189.5" text="Delegación/Municipio"/>
				<s:Label x="218" y="189.5" text="Colonia"/>
				<s:Label x="0" y="10" text="* Taza de Impuesto" fontWeight="bold" visible="false"/>
				<s:Label x="436" y="190.5" text="* Otra Colonia" id="lbOtraCol" visible="false" fontWeight="bold"/>
				
				<s:CheckBox id="esMatriz" selected="true" label="Es matriz" visible="false" x="0" y="0"/>
				
				<s:TextInput x="0" y="30"  id="nomSucursal" toolTip="En caso de no manejar sucursales en su empresa, se recomienda capturar su nombre comercial o su razón social." 
							 restrict="[A-Za-z0-9&amp;ñÑ-_,.áÁéÉíÍóÓúÚ ]" name="Nombre de Sucursal" width="392" height="24" maxChars="350"/>
				
				<s:TextArea x="410" y="29" id="rutaLogo" valueCommit="msgUpload(1);" enabled="false" editable="false" name="Adjuntar Logotipo" width="243" height="26"/>
				
				<s:TextInput x="0" y="90" id="correoSuc" name="Correo Electrónico de la Sucursal" 
							 width="227" height="24" restrict="a-no-zA-NO-Z0-9@._-" typographicCase="lowercase"/>
				
				<s:TextInput x="245" y="90"  id="calle" restrict="[A-Za-z0-9&amp;-_#°,.áÁéÉíÍóÓúÚ ]" name="Calle" width="220" height="24" maxChars="350"/>
				<s:TextInput x="483.2" y="90" id="numExt" restrict="[A-Za-z0-9#°-_,. ]" name="Número Exterior" width="100" height="24" maxChars="50"/>
				<s:TextInput x="601.7" y="90" id="numInt" restrict="[A-Za-z0-9#°-_,. ]" name="Número Interior" width="75" height="24" maxChars="50"/>	
				
				<mx:ComboBox x="0" y="150" id="pais" name="Pais" width="130" height="24" change="handlerPais();"/>
				
				<s:TextInput id="cp" name="Código Postal" change="cpDir();" valueCommit="cpDir();" x="148" y="150"  width="117" restrict="0-9" maxChars="5" height="24"/>
				<s:TextInput id="setColonia" visible="false" width="40" valueCommit="Send(646);"/>
				
				<s:TextInput x="0" y="150" width="0" id="viewColonia" visible="false" valueCommit="viewCTLColonia();" />
				
				
				<mx:ComboBox x="283" y="150" id="estado" name="Estado" width="180" height="24"
							 valueCommit="checkEnableCB(estado, txtEstado, colonia, txtColonia, idColonia);"/>
				
				<mx:ComboBox x="481.2" y="150" id="ciudad" name="Ciudad" width="196" height="24"
							 valueCommit="checkEnableCB(ciudad, txtCiudad, colonia, txtColonia, idColonia);"/>
				
				<mx:ComboBox x="0" y="210" id="municipio" name="Municipio" width="200" height="24"
							 valueCommit="checkEnableCB(municipio, txtMunicipio, colonia, txtColonia, idColonia);"/>
									
				<mx:ComboBox x="218" y="210" id="colonia" name="Colonia" width="200" height="24" change="dataCombos();"/>
				
				<s:TextInput x="0" y="150" width="130" id="txtPais" name="Pais" visible="false" height="24" maxChars="250" restrict="[A-Za-zñÑ ]"/>
				<s:TextInput x="283" y="150" width="180" id="txtEstado" name="Estado" visible="false" height="24" maxChars="250" restrict="[A-Za-zñÑ ]"/>
				<s:TextInput x="481.2" y="150" width="196" id="txtCiudad" name="Ciudad" visible="false" height="24" maxChars="250" restrict="[A-Za-zñÑ ]"/>
				<s:TextInput x="0" y="210" width="200" id="txtMunicipio" name="Municipio" visible="false" height="24" maxChars="250" restrict="[A-Za-zñÑ ]"/>
				<s:TextInput x="436" y="210" width="240" id="txtColonia" name="Colonia" visible="false" height="24" maxChars="250" restrict="[A-Za-zñÑ0-9 ]"/>
				
				<ns1:uploaderGen x="411" y="30" id="logoFactura" height="177" width="267" 
								 r3DS="DS_FE" 
								 r3FilePath="{guid.text}" 
								 r3Param1="logMod"
								 r3SQL="IF EXISTS (SELECT * FROM filesTmp WHERE GUID = @0) UPDATE filesTmp SET rutaLogo=@1 WHERE [GUID]=@0 ELSE INSERT INTO filesTmp (GUID,rutaLogo,FG) VALUES (@0,@1, GETDATE());" 
								 r3SQLArgs="F:S:{guid.text}"
								 r3AshxPath="https://fx.facturaxion.com/facturaxion/uploadHandler.ashx" 
								 r3Param5="1"
								 uploadComplete="upComplete(1);"/>
				
				<mx:Image x="655" y="30" source="assets/search_24.png" click="twSUC.visible = true;" width="24" height="24" visible="true"/>
				<s:TextInput x="410" y="1" id="rutaLogoGET" valueCommit="getIMG(rutaLogoGET, logoFactura, nomSucursal, logSUC);" visible="false" width="243" height="26"/>

			</s:Group>
			
			<s:Group width="100%" height="100%" id="cnvsSMT" showEffect="showEffect" visible.SMIT="true" visible="false">
				
				<s:Label x="411" y="10" text="* Adjuntar Logotipo" fontWeight="bold"/>
				<s:Label x="521" y="10" text=" (Sólo Formatos png y jpg)" fontWeight="bold" fontStyle="italic"/>
				
				<s:Label x="0" y="131" text="* Taza de Impuesto" fontWeight="bold"/>
				<s:Label x="192" y="131" text="* Plantillas" fontWeight="bold" id="asas"/>
				
				<s:Label x="0" y="10" text="RFC" fontWeight="bold"/>
				<s:Label x="168" y="10" text="Empresa" fontWeight="bold"/>
				<s:Label x="0" y="71" text="Sucursal" fontWeight="bold"/>
				
				<s:Label x="0" y="31" id="mtRFC" fontWeight="bold" fontSize="13" width="145" color="#006bbd"/>
				<s:Label x="168" y="31" id="mtEmpresa" fontWeight="bold" fontSize="13" width="224" color="#006bbd"/>
				<s:Label x="0" y="91" id="mtSucursal" fontWeight="bold" fontSize="13" width="392" color="#006bbd"/>
				
				<s:TextInput x="0" y="30"  id="rfcEmpresa" valueCommit="mtRFC.text = rfcEmpresa.text;" width="25" visible="false"/>
				
				<s:TextInput x="100" y="30"  id="nameEmpresa" valueCommit="mtEmpresa.text = nameEmpresa.text;" width="20" visible="false"/>
				
				<s:TextInput x="250" y="30"  id="nomSucursalMT" valueCommit="mtSucursal.text = nomSucursalMT.text;" width="20" visible="false"/>
				
				<mx:ComboBox x="0" y="151" id="idTasaImpuesto" name="Tasa de Impuesto" width="140" height="24" />
				
				<mx:ComboBox x="192" y="151" id="idPlantilla" name="Tipo de plantilla" width="200" height="24"
							change="selectPlantilla();" itemRenderer="rendererPlantillas" />
				
				<s:TextInput x="192" y="120" id="tipoPlantilla" width="20" visible="false" editable="false"/>
				
				<s:TextInput x="192" y="95" id="setPlantilla" valueCommit="plantilla.source = setPlantilla.text;" 
							 width="20" visible="false" editable="false"/>
				
				<mx:Image id="plantilla" x="410" y="90" width="290" height="150" />
				
				<s:TextArea x="410" y="29" id="rutaLogoMIT" valueCommit="msgUpload(2);" enabled="false" editable="false" name="Adjuntar Logotipo" width="267" height="26"/>
				
				<ns1:uploaderGen x="411" y="30" id="logoFacturaMIT" height="177" width="291" 
								 r3DS="DS_FE" 
								 r3FilePath="{guid.text}" 
								 r3Param1="logMod"
								 r3SQL="IF EXISTS (SELECT * FROM filesTmp WHERE GUID = @0) UPDATE filesTmp SET rutaLogo=@1 WHERE [GUID]=@0 ELSE INSERT INTO filesTmp (GUID,rutaLogo,FG) VALUES (@0,@1, GETDATE());" 
								 r3SQLArgs="F:S:{guid.text}"
								 r3AshxPath="https://fx.facturaxion.com/facturaxion/uploadHandler.ashx" 
								 r3Param5="1"
								 uploadComplete="upComplete(2);"/>
				<mx:Image x="680" y="30" source="assets/search_24.png" click="twSUC.visible = true;" width="24" height="24" visible="true"/>
				<s:TextInput x="410" y="1" id="rutaLogoGETMIT" valueCommit="getIMG(rutaLogoGETMIT, logoFacturaMIT, nomSucursalMT, logSUC);" visible="false" width="243" height="26"/>
			</s:Group>
			
			<s:TitleWindow id="twSUC" close="twSUC.visible = false;" visible="false" title="Logotipo de Sucursal" horizontalCenter="0" verticalCenter="0">
				<s:HGroup horizontalAlign="center" verticalAlign="middle" paddingBottom="3" paddingLeft="3" paddingRight="3" paddingTop="3">
					<mx:Image horizontalAlign="center" verticalAlign="middle" id="logSUC"/>
				</s:HGroup>
			</s:TitleWindow>
			
			<s:Group width="100%" height="100%" id="cnvsFOL" showEffect="showEffect" visible.FOLS="true" visible="false">
				<s:Label x="0" y="11" text="* Serie" fontWeight="bold"/>
				<s:Label x="148" y="10" text="* Folio Inicial" fontWeight="bold"/>
				<s:Label x="300" y="10" text="* Folio Final" fontWeight="bold"/>
				<s:Label x="0" y="70" text="Número de Aprobación" visible="false"/>
				<s:Label x="148" y="70" text="Año de Aprobación" visible="false"/>
				
				<s:TextInput id="existFolios" visible="false" editable="false" valueCommit="validSerie();"/>
				<s:TextInput x="0" y="30" id="serie" restrict="a-no-zA-NO-Z" maxChars="25" typographicCase="uppercase" name="Serie" editable="false" 
							 width="130" height="24"/>
				
				<s:TextInput x="296" y="30" id="folioFinACT" restrict="0-9" width="130" height="24" maxChars="10" visible="false"/>
				<s:TextInput x="148" y="30" id="folioIni" restrict="0-9" width="130" name="Folio Inicial" height="24" maxChars="10" editable="false"/>
				<s:TextInput x="296" y="30" id="folioFin" valueCommit="evalFolios(2);" restrict="0-9" width="130" name="Folio Final" height="24" maxChars="10"/>
				<s:TextInput id="folioActual" editable="false" visible="false"/>
				
				<s:TextInput x="0" y="90" id="numAprob" visible="false" editable="false" restrict="0-9" typographicCase="uppercase" width="130" name="Número de Aprobación" height="24" maxChars="100"/>
				<s:NumericStepper x="148" y="88" id="anioAprob" visible="false" enabled="false" width="130" name="Número de Aprobación" minimum="2006" maximum="2100" stepSize="1" creationComplete="valYear();" height="26"/>
			</s:Group>
		</s:Group>
	</s:HGroup>
	<s:HGroup id="Ctrls" width="100%" verticalAlign="middle" horizontalAlign="right" paddingRight="10" paddingBottom="10">
		<s:HGroup width="100%" paddingLeft="20">
			<s:Label x="0" y="11" text="Todos los campos marcados con * son obligatorios" fontWeight="bold"/>
		</s:HGroup>
		
		<s:TextInput id="dataOK" valueCommit="msgDataInsert();" visible="false" editable="false" width="20"/>
		<s:TextInput id="validNextMAILEMP" visible="false" editable="false" width="0"/>
		<s:TextInput id="validNextMAILSUC" visible="false" editable="false" width="0"/>
		
		<s:TextInput id="guid" visible="false" creationComplete="asignaGUID();" editable="false" enabled="false" width="0"/>
		<s:TextInput id="windowUPD" visible="false" valueCommit="initProcess()" editable="false" width="0"/>
		<s:TextInput id="paso" width="0" visible="false"/>

		<s:TextInput id="idColonia" visible="false" width="40" />
		
		<s:TextInput id="idRegistro" width="40" visible="false" editable="false"/>
		<s:TextInput id="idEmpresa" width="0" visible="false"/> 
		
		<mx:Button id="aceptar" label="Aceptar"  click="saveWindow()" height="24" icon="@Embed(source='assets/accept-icon_16.png')" width="100"/>
		<mx:Button id="canelar" label="Cancelar" click="cancelTW();"  height="24" icon="@Embed(source='assets/delete-icon_16.png')" width="100"/>
		
	</s:HGroup>
</s:VGroup>
<mx:Canvas id="contentCTLS" width="100%" height="100%">
	<s:TitleWindow id="msg" close="salir();" width="482" height="215" visible="false" skinClass="twSkin" title="Configuración completa" horizontalCenter="-2" verticalCenter="0">
		<mx:Image x="23" y="21" source="assets/fx_icon.png"/>
		
		<mx:Text x="78.5" y="27" id="titleMSG" text="Edición finalizada." textAlign="center" fontSize="15" fontStyle="normal" fontWeight="bold" color="#054A95"/>		
		<mx:Text x="21.5" y="76" id="adviceMSG" text="Nota:" textAlign="center" fontSize="13" fontStyle="normal" fontWeight="normal" color="#054A95"/>
		<mx:Text x="79.5" y="75" id="contentMSG" textAlign="center" fontSize="13" fontStyle="normal" fontWeight="normal" color="#054A95"/>
		
		<mx:Button x="205.5" y="134" icon="@Embed(source='assets/accept-icon_24.png')" creationCompleteEffect="{glowButton}" label=" Aceptar  " 
				   click="salir();" height="38" fontSize="12"/>
	</s:TitleWindow>
</mx:Canvas>
</s:TitleWindow>